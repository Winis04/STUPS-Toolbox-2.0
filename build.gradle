apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'


repositories {
    jcenter()
    mavenCentral()
    mavenLocal()
}
dependencies{
	compile 'net.sf.jung:jung2:2.0.1'
	compile 'net.sf.jung:jung-visualization:2.1.1'
	compile 'net.sf.jung:jung-io:2.1.1'
	compile 'net.sf.jung:jung-algorithms:2.1.1'
	compile 'net.sf.jung:jung-graph-impl:2.1.1'
	compile 'net.sf.jung:jung-api:2.1.1'
	compile "junit:junit:4.12"
	compile 'org.apache.commons:commons-io:1.3.2'
	compile 'org.reflections:reflections:0.9.10'
	compile 'de.hhu.stups:sablecc:3.2.10'
	compile group: 'commons-lang', name: 'commons-lang', version: '2.6'

}

//for fat jar

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.4'
    }
}

apply plugin: 'com.github.johnrengelman.shadow'


jar {
  manifest {
    attributes(
      'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
      'Main-Class': 'Main.GUI'
    )
  }
}

//gets SableCC.jar, so it can be executed
task copyDepJars(type: Copy) {
  from configurations.compile
  into 'lib'
}

//runs sableCC
task runSableCC() {
	doLast {
		new File("src/main/sablecc") . eachFile ( ) { file ->
			exec {
				commandLine 'java','-jar','lib/sablecc-3.2.10.jar','-d','generated-src/main/java/',file.getAbsolutePath()
			}
			
		
		}
	}
}

//does some necessary adjustments
task doAdjustments() {
	doLast{
		new File("src/main/sablecc") . eachFile ( ) { file -> 
			 String name = file.getName().split("\\.")[0]
			 String contents = new File('generated-src/main/java/'+name+'/lexer/Lexer.java').getText( 'UTF-8' ) 
			 contents = contents.replaceAll( 'lexer.dat', '/'+name+'/lexer.dat')
			new File( 'generated-src/main/java/'+name+'/lexer/Lexer.java' ).write( contents, 'UTF-8' )
		
			contents = new File('generated-src/main/java/'+name+'/parser/Parser.java').getText( 'UTF-8' ) 
			 contents = contents.replaceAll( 'parser.dat', '/'+name+'/parser.dat')
			new File( 'generated-src/main/java/'+name+'/parser/Parser.java' ).write( contents, 'UTF-8' )
			copy {
				from 'generated-src/main/java/'+name+'/parser/parser.dat'
				 into 'generated-src/main/resources/'+name
			}
			copy{
			 from 'generated-src/main/java/'+name+'/lexer/lexer.dat'
			 into 'generated-src/main/resources/'+name
			 }
		}
	}
}

//this is the task, that should be called
task sableCC() {
	doLast{
		println("sableCC complete!")
	}
}


sableCC.dependsOn doAdjustments
runSableCC.mustRunAfter copyDepJars
runSableCC.dependsOn copyDepJars
doAdjustments.mustRunAfter runSableCC
doAdjustments.dependsOn runSableCC
compileJava.mustRunAfter sableCC
compileJava.dependsOn sableCC



sourceSets {
	main {
        java {
            srcDir 'src/main/java'
			srcDir 'generated-src/main/java'
        }
		resources {
			srcDirs = ['src/main/resources','generated-src/main/resources']
		}
	}
}